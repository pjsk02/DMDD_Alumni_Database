/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.WorkExperience;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Giridhar
 */
public class WorkTableJPanel extends javax.swing.JPanel {

    /**
     * Creates new form WorkTableJPanel
     */
    JPanel container;
    public WorkTableJPanel(JPanel container) {
        initComponents();
        this.container = container;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkExperience = new javax.swing.JTable();
        btnPopulate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        tblWorkExperience.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Work ID", "Student ID", "Company", "Title", "Start Date", "End Date", "Place of work"
            }
        ));
        jScrollPane1.setViewportView(tblWorkExperience);

        btnPopulate.setText("Populate Data");
        btnPopulate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPopulateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete record");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(btnPopulate))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(358, 358, 358)
                        .addComponent(btnDelete)))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(btnPopulate)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addContainerGap(128, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPopulateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPopulateActionPerformed
        // TODO add your handling code here:
        try {
        // Load MySQL JDBC Driver
        Class.forName("com.mysql.cj.jdbc.Driver");

        // Establish connection to the database
        Connection conn = DriverManager.getConnection(
            "jdbc:mysql://localhost:3306/Admin_Database?zeroDateTimeBehavior=CONVERT_TO_NULL", 
            "root", 
            "password"
        );

        // Create a statement
        Statement st = conn.createStatement();

        // SQL query to fetch data from the WorkExperience table
        String sql = "SELECT * FROM WorkExperience;";

        // Execute the query
        ResultSet rs = st.executeQuery(sql);

        // Loop through the result set
        while (rs.next()) {
            // Retrieve data from each column (modify column names as per your WorkExperience table)
            String studentID = String.valueOf(rs.getInt("StudentID"));
            String companyName = rs.getString("CompanyName");
            String jobTitle = rs.getString("Title");
            String startDate = rs.getString("StartDate");
            String endDate = rs.getString("EndDate"); // May be null
            String placeofwork = rs.getString("Placeofwork");

            // Create a row of data
            String tbData[] = {studentID, companyName, jobTitle, startDate, endDate, placeofwork};

            // Get the table model and add the row
            DefaultTableModel tblModel = (DefaultTableModel) tblWorkExperience.getModel();
            tblModel.addRow(tbData);
        }

        // Close the connection
        conn.close();
    } catch (Exception e) {
        System.out.println(e.getMessage());
    }

    }//GEN-LAST:event_btnPopulateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
        // Get the selected row index from the JTable
        int selectedRow = tblWorkExperience.getSelectedRow();

        // If no row is selected, show a message
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a record to delete.");
            return;
        }

        // Retrieve the StudentID (or unique identifier) from the selected row
        String studentID = (String) tblWorkExperience.getValueAt(selectedRow, 0); // Assuming StudentID is in the first column

        // Confirm the deletion action with the user
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {

            // Load MySQL JDBC Driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Establish connection to the database
            Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/Admin_Database?zeroDateTimeBehavior=CONVERT_TO_NULL", 
                "root", 
                "password"
            );

            // SQL query to delete the record from the WorkExperience table
            String sql = "DELETE FROM WorkExperience WHERE StudentID = ?"; // Assuming StudentID is the primary key

            // Prepare the statement
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, studentID); // Set the StudentID to delete

            // Execute the update (delete)
            int rowsAffected = pstmt.executeUpdate();

            // Check if the deletion was successful
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Record deleted successfully.");

                // Remove the selected row from the JTable
                DefaultTableModel model = (DefaultTableModel) tblWorkExperience.getModel();
                model.removeRow(selectedRow);
            } else {
                JOptionPane.showMessageDialog(null, "Failed to delete the record.");
            }

            // Close the connection
            conn.close();
        }
    } catch (Exception e) {
        System.out.println(e.getMessage());
    }

    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPopulate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblWorkExperience;
    // End of variables declaration//GEN-END:variables
}
